"use strict";(()=>{var e={};e.id=740,e.ids=[740],e.modules={8013:e=>{e.exports=require("mongodb")},1287:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8510:(e,t,s)=>{s.r(t),s.d(t,{config:()=>p,default:()=>l,routeModule:()=>d});var a={};s.r(a),s.d(a,{default:()=>handler});var o=s(1802),r=s(7153),n=s(6249),i=s(712);async function handler(e,t){if("GET"!==e.method)return t.status(405).json({message:"Method not allowed"});try{if(i.Z&&null===i.r){let e=await i.Z,s=e.db(),a=await s.collection("jackpot_state").findOne({status:"open"});if(!a)return t.status(404).json({message:"No open jackpot state"});t.status(200).json({jackpotRoll:a.jackpotRoll,majorRolls:a.majorRolls,minorRolls:a.minorRolls,hitMajors:a.hitMajors,hitMinors:a.hitMinors,status:a.status,createdAt:a.createdAt,lastUpdated:a.lastUpdated,progress:{minors:a.hitMinors.length/100,majors:a.hitMajors.length/10}})}else if(i.r){let e=await i.r.collection("jackpotState"),s=await e.findOne({});t.status(200).json({pool:s.pool,burned:s.burned,spins:s.spins,progress:s.progress})}else t.status(500).json({message:"Database not available"})}catch(e){console.error("Error fetching jackpot state:",e),t.status(200).json({pool:0,burned:0,spins:0,progress:{minors:0,majors:0}})}}let l=(0,n.l)(a,"default"),p=(0,n.l)(a,"config"),d=new o.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/jackpot-state",pathname:"/api/jackpot-state",bundlePath:"",filename:""},userland:a})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[222,712],()=>__webpack_exec__(8510));module.exports=s})();