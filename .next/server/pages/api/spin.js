"use strict";(()=>{var e={};e.id=531,e.ids=[531],e.modules={8013:e=>{e.exports=require("mongodb")},1287:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},575:(e,t,a)=>{a.r(t),a.d(t,{config:()=>p,default:()=>d,routeModule:()=>u});var n={};a.r(n),a.d(n,{default:()=>handler});var o=a(1802),r=a(7153),i=a(6249),s=a(712);let l=["Bonk Dog","Banana","Rug","Fire","Diamond","Rocket","Skull"];async function handler(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});let{wallet:a}=e.body;if(!a)return t.status(400).json({message:"Wallet required"});try{let e=Array.from({length:5},()=>Math.floor(Math.random()*l.length)),n=e.map(e=>l[e]),o=Math.random(),r="none",i="none";if(o<.01?(r="jackpot",i="jackpot"):o<.05?(r="major",i="major"):o<.15&&(r="minor",i="minor"),s.Z&&null===s.r){let e=await s.Z,t=e.db();await t.collection("jackpot_state").updateOne({status:"open"},{$inc:{spins:1},$set:{lastUpdated:new Date}}),"none"!==r&&await t.collection("spin_logs").insertOne({wallet:a,result:r,timestamp:new Date,symbols:n,spinRoll:Math.floor(1e4*Math.random())})}else if(s.r){let e=await s.r.collection("jackpotState"),t=await e.findOne({});if(await e.updateOne({},{$set:{pool:t.pool+.01,burned:t.burned+.002,spins:t.spins+1}}),"none"!==r){let e=await s.r.collection("winners");await e.insertOne({wallet:a,winType:i,timestamp:new Date().toISOString(),spinId:Date.now().toString(),prizeAmount:"jackpot"===r?5:void 0})}}t.status(200).json({result:r,reels:e,symbols:n,winType:i})}catch(e){console.error("Error processing spin:",e),t.status(500).json({message:"Internal server error"})}}let d=(0,i.l)(n,"default"),p=(0,i.l)(n,"config"),u=new o.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/spin",pathname:"/api/spin",bundlePath:"",filename:""},userland:n})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[222,712],()=>__webpack_exec__(575));module.exports=a})();